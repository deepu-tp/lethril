#!/bin/sh -e

# Get Config File if passed as argument 2
DEFAULTS=$2
DEFAULTS=${DEFAULTS:-"/etc/default/lethril-twitterd"}
. $DEFAULTS

NAME="Lethril Twitter Daemon" 

. /lib/lsb/init-functions
# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}

check_dev_null() {
    if [ ! -c /dev/null ]; then
    if [ "$1" = log_end_msg ]; then
        log_end_msg 1 || true
    fi
    if ! run_by_init; then
        log_action_msg "/dev/null is not a character device!"
    fi
    exit 1
    fi
}


export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"
stop_worker () {
    cmd="start-stop-daemon --stop \
                           --verbose \
                           $* \
                           --pidfile $PID_FILE"
    if $cmd; then
        log_end_msg 0
    /bin/rm -f $PID_FILE
    else
        log_end_msg 1
    fi
}

start_worker () {
    cmd="start-stop-daemon --start \
                           --verbose --background \
                           --oknodo \
                           --make-pidfile \
                           $* \
                           --pidfile $PID_FILE
                           --exec $PYTHON $SCRIPT -- --config-file $CONFIG_FILE"
    if $cmd; then
        log_end_msg 0
    else
        log_end_msg 1
    fi
}



case "$1" in
  start)
    check_dev_null
    log_daemon_msg "Starting...." "$NAME"
    start_worker
    ;;
  stop)
    log_daemon_msg "Stopping...." "$NAME"
    stop_worker --oknodo
    ;;

  reload|force-reload)
    echo "Use start+stop"
    ;;

  restart)
    log_daemon_msg "Restarting...." "$NAME"
    stop_worker --oknodo --retry 5
    check_dev_null log_end_msg
    start_worker
    ;;

  try-restart)
    log_daemon_msg "Restarting....." "$NAME"
    set +e
    stop_worker --retry 5
    RET="$?"
    set -e
    case $RET in
        0)
        # old daemon stopped
        check_dev_null log_end_msg
        start_worker
        ;;
        1)
        # daemon not running
        log_progress_msg "(not running)"
        log_end_msg 0
        ;;
        *)
        # failed to stop
        log_progress_msg "(failed to stop)"
        log_end_msg 1
        ;;
    esac
    ;;

  status)
    status_of_proc -p $PID_FILE "$PYTHON $SCRIPT" "$NAME" && exit 0 || exit $?
    ;;

  *)
    log_action_msg "Usage: $0 {start|stop|force-reload|restart|try-restart|status}"
    exit 1
esac

exit 0
